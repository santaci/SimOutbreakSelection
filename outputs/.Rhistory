library(ggpubr)
library(scales)
library(reshape2)
#Function for data summary
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Open tables for simulation results
nonWFhalfFitness<-read.table("finalnonWF_halfFitness.out", header=TRUE,sep='\t')
WF_select_112st<-read.table("WF_select_112st2.log", header=TRUE,sep='\t')
WF_select_112st_nwf<-read.table("WF_select_112st_nwf.log", header=TRUE,sep='\t')
WF_neutralBottle<-read.table("WF_neutralBottle.log", header=TRUE,sep='\t')
#Calculate standard error for all of them
nonWF_sd<-data_summary(nonWFhalfFitness, varname="Frequency", groupnames=c("Generation"))
WFs_sd<-data_summary(WF_select_112st, varname="Frequency", groupnames=c("Generation"))
WFsnwf_sd<-data_summary(WF_select_112st_nwf, varname="Frequency", groupnames=c("Generation"))
WFn_sd<-data_summary(WF_neutralBottle, varname="Frequency", groupnames=c("Generation"))
p<-ggline(data=nonWFhalfFitness,x="Generation",y="Frequency", add = c("mean_sd"), combine=TRUE,size = 0.5,error.plot = "errorbar",add.params = list(color="brown")) + theme_bw() + theme(axis.text.x = element_text(angle=90))
p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="purple", width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd, color="purple") + geom_point(data=WFn_sd) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="red", width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color="red") + geom_point(data=WFsnwf_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="darkgreen", width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency), color="darkgreen") + geom_point(data=WFsnwf_sd)+ scale_x_continuous(breaks=seq(58000,580016,1))
#
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="red", width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color="red") + geom_point(data=WFsnwf_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="darkgreen", width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency), color="darkgreen") + geom_point(data=WFsnwf_sd)+ scale_x_continuous(breaks=seq(58000,580016,1))
setwd("~/mount_point3/epiSelect/outputs/")
library(ggpubr)
library(scales)
library(reshape2)
#Function for data summary
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Open tables for simulation results
nonWFhalfFitness<-read.table("finalnonWF_halfFitness.out", header=TRUE,sep='\t')
WF_select_112st<-read.table("WF_select_112st2.log", header=TRUE,sep='\t')
WF_select_112st_nwf<-read.table("WF_select_112st_nwf.log", header=TRUE,sep='\t')
WF_neutralBottle<-read.table("WF_neutralBottle.log", header=TRUE,sep='\t')
#Calculate standard error for all of them
nonWF_sd<-data_summary(nonWFhalfFitness, varname="Frequency", groupnames=c("Generation"))
WFs_sd<-data_summary(WF_select_112st, varname="Frequency", groupnames=c("Generation"))
WFsnwf_sd<-data_summary(WF_select_112st_nwf, varname="Frequency", groupnames=c("Generation"))
WFn_sd<-data_summary(WF_neutralBottle, varname="Frequency", groupnames=c("Generation"))
p<-ggline(data=nonWFhalfFitness,x="Generation",y="Frequency", add = c("mean_sd"), combine=TRUE,size = 0.5,error.plot = "errorbar",add.params = list(color="brown")) + theme_bw() + theme(axis.text.x = element_text(angle=90))
p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="purple", width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd, color="purple") + geom_point(data=WFn_sd) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="red", width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color="red") + geom_point(data=WFsnwf_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="darkgreen", width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency), color="darkgreen") + geom_point(data=WFsnwf_sd)+ scale_x_continuous(breaks=seq(58000,580016,1))
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="salmon", width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color="salmon") + geom_point(data=WFsnwf_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="darkgreen", width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency), color="darkgreen") + geom_point(data=WFsnwf_sd)+ scale_x_continuous(breaks=seq(58000,580016,1))
setwd("~/results/")
carry_third_Ks<-read.table("carry_third_Ks.log", header=TRUE,sep='\t')
fitness_third<-read.table("fitness_third.log", header=TRUE,sep='\t')
WF_select_112<-read.table("WF_select_112.log", header=TRUE,sep='\t')
genotypes_third_fit<-melt(data=fitness_third,id.vars = c("Generation","Ne"),measure.vars = c("WT","HET","HOM"))
genotypes_third_carry<-melt(data=carry_third_Ks,id.vars = c("Generation","Ne"),measure.vars = c("WT","HET","HOM"))
genotypes_WF_112<-melt(data=WF_select_112,id.vars = c("Generation","Ne"),measure.vars = c("WT","HET","HOM"))
genotypes_third_fit$Generation<-as.factor(genotypes_third_fit$Generation)
genotypes_third_carry$Generation<-as.factor(genotypes_third_carry$Generation)
genotypes_WF_112$Generation<-as.factor(genotypes_WF_112$Generation)
genotypes_WF_112$value_ne<-(genotypes_WF_112$value/genotypes_WF_112$Ne)
genotypes_third_carry$value_ne<-(genotypes_third_carry$value/genotypes_third_carry$Ne)
genotypes_third_fit$value_ne<-(genotypes_third_fit$value/genotypes_third_fit$Ne)
ggplot() + geom_line(aes(x=Generation, y=Frequency, group=Replicate), data=fitness_third,color="red") + scale_color_discrete(labels=c("red"="fitness")) + geom_point(aes(x=Generation, y=Frequency, group=Replicate), data=fitness_third,color="red") + geom_line(aes(x=Generation, y=Frequency, group=Replicate), data=carry_third_Ks,color="blue") + scale_color_discrete(labels=c("blue"="carrying capacity")) + geom_point(aes(x=Generation, y=Frequency, group=Replicate), data=carry_third_Ks,color="blue") + geom_line(aes(x=Generation, y=Frequency, group=Replicate), data=WF_select_112,color="green") + scale_color_discrete(labels=c("green"="WF selection")) + geom_point(aes(x=Generation, y=Frequency, group=Replicate), data=WF_select_112,color="green") + theme_bw() +theme(axis.text.x = element_text(angle=90)) + scale_x_continuous(breaks=seq(58000,58016,1)) + scale_y_continuous(breaks=seq(0,1,0.1),limits=c(0,1)) + theme(legend.position="right")
setwd("~/results/")
carry_third_Ks<-read.table("carry_third_Ks.log", header=TRUE,sep='\t')
fitness_third<-read.table("fitness_third.log", header=TRUE,sep='\t')
WF_select_112<-read.table("WF_select_112.log", header=TRUE,sep='\t')
genotypes_third_fit<-melt(data=fitness_third,id.vars = c("Generation","Ne"),measure.vars = c("WT","HET","HOM"))
genotypes_third_carry<-melt(data=carry_third_Ks,id.vars = c("Generation","Ne"),measure.vars = c("WT","HET","HOM"))
genotypes_WF_112<-melt(data=WF_select_112,id.vars = c("Generation","Ne"),measure.vars = c("WT","HET","HOM"))
genotypes_third_fit$Generation<-as.factor(genotypes_third_fit$Generation)
genotypes_third_carry$Generation<-as.factor(genotypes_third_carry$Generation)
genotypes_WF_112$Generation<-as.factor(genotypes_WF_112$Generation)
genotypes_WF_112$value_ne<-(genotypes_WF_112$value/genotypes_WF_112$Ne)
genotypes_third_carry$value_ne<-(genotypes_third_carry$value/genotypes_third_carry$Ne)
genotypes_third_fit$value_ne<-(genotypes_third_fit$value/genotypes_third_fit$Ne)
ggplot() + geom_line(aes(x=Generation, y=Frequency, group=Replicate), data=fitness_third,color="red") + scale_color_discrete(labels=c("red"="fitness")) + geom_point(aes(x=Generation, y=Frequency, group=Replicate), data=fitness_third,color="red") + geom_line(aes(x=Generation, y=Frequency, group=Replicate), data=carry_third_Ks,color="blue") + scale_color_discrete(labels=c("blue"="carrying capacity")) + geom_point(aes(x=Generation, y=Frequency, group=Replicate), data=carry_third_Ks,color="blue") + geom_line(aes(x=Generation, y=Frequency, group=Replicate), data=WF_select_112,color="green") + scale_color_discrete(labels=c("green"="WF selection")) + geom_point(aes(x=Generation, y=Frequency, group=Replicate), data=WF_select_112,color="green") + theme_bw() +theme(axis.text.x = element_text(angle=90)) + scale_x_continuous(breaks=seq(58000,58016,1)) + scale_y_continuous(breaks=seq(0,1,0.1),limits=c(0,1)) + theme(legend.position="right")
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="blue", width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color="blue") + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="green", width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color="green") + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="green", width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color="green", linetype=dashed) + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="green", width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color="green", linetype="dashed") + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="salmon", width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color="salmon", linetype="dashed") + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="darkgreen", width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd) + geom_point(data=WFn_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="blue", width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency)) + geom_point(data=WFs_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
q<-p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="darkgreen", width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd) + geom_point(data=WFn_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="blue", width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency)) + geom_point(data=WFs_sd) + scale_x_continuous(breaks=seq(58000,580016,1))q<-
q<-p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="darkgreen", width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd) + geom_point(data=WFn_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color="blue", width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency)) + geom_point(data=WFs_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
set_palette(q,"jco")
q<-p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd) + geom_point(data=WFn_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency)) + geom_point(data=WFs_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
set_palette(q,"jco")
p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd) + geom_point(data=WFn_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency)) + geom_point(data=WFs_sd) + scale_x_continuous(breaks=seq(58000,580016,1)) + scale_color_manual(values="jco")
p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd) + geom_point(data=WFn_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency)) + geom_point(data=WFs_sd) + scale_x_continuous(breaks=seq(58000,580016,1)) + scale_color_manual(values="Spectral")
palette("jco")
palette(jco)
palette(jco(6))
get_palette("jco")
get_palette("jco", 6)
get_palette("jco", 6)[1]
get_palette("jco", 6)[2]
mycolors<-get_palette("jco", 10)
mycolors[3]
q<-p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[1], width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd) + geom_point(data=WFn_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency)) + geom_point(data=WFs_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
plot(q)
setwd("~/mount_point3/epiSelect/outputs/")
library(ggpubr)
library(scales)
library(reshape2)
#Create the palette I want
mycolors<-get_palette("jco", 10)
#Function for data summary
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Open tables for simulation results
nonWFhalfFitness<-read.table("finalnonWF_halfFitness.out", header=TRUE,sep='\t')
WF_select_112st<-read.table("WF_select_112st2.log", header=TRUE,sep='\t')
WF_select_112st_nwf<-read.table("WF_select_112st_nwf.log", header=TRUE,sep='\t')
WF_neutralBottle<-read.table("WF_neutralBottle.log", header=TRUE,sep='\t')
#Calculate standard error for all of them
nonWF_sd<-data_summary(nonWFhalfFitness, varname="Frequency", groupnames=c("Generation"))
WFs_sd<-data_summary(WF_select_112st, varname="Frequency", groupnames=c("Generation"))
WFsnwf_sd<-data_summary(WF_select_112st_nwf, varname="Frequency", groupnames=c("Generation"))
WFn_sd<-data_summary(WF_neutralBottle, varname="Frequency", groupnames=c("Generation"))
p<-ggline(data=nonWFhalfFitness,x="Generation",y="Frequency", add = c("mean_sd"), combine=TRUE,size = 0.5,error.plot = "errorbar",add.params = list(color=mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90))
p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd, color=mycolors[2]) + geom_point(data=WFn_sd) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[3], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[3]) + geom_point(data=WFsnwf_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[4], width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency), color=mycolors[4]) + geom_point(data=WFsnwf_sd)+ scale_x_continuous(breaks=seq(58000,580016,1))
setwd("~/mount_point3/epiSelect/outputs/")
library(ggpubr)
library(scales)
library(reshape2)
#Create the palette I want
mycolors<-get_palette("jco", 10)
#Function for data summary
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Open tables for simulation results
nonWFhalfFitness<-read.table("finalnonWF_halfFitness.out", header=TRUE,sep='\t')
WF_select_112st<-read.table("WF_select_112st2.log", header=TRUE,sep='\t')
WF_select_112st_nwf<-read.table("WF_select_112st_nwf.log", header=TRUE,sep='\t')
WF_neutralBottle<-read.table("WF_neutralBottle.log", header=TRUE,sep='\t')
#Calculate standard error for all of them
nonWF_sd<-data_summary(nonWFhalfFitness, varname="Frequency", groupnames=c("Generation"))
WFs_sd<-data_summary(WF_select_112st, varname="Frequency", groupnames=c("Generation"))
WFsnwf_sd<-data_summary(WF_select_112st_nwf, varname="Frequency", groupnames=c("Generation"))
WFn_sd<-data_summary(WF_neutralBottle, varname="Frequency", groupnames=c("Generation"))
p<-ggline(data=nonWFhalfFitness,x="Generation",y="Frequency", add = c("mean_sd"), combine=TRUE,size = 0.5,error.plot = "errorbar",add.params = list(color=mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90))
p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd, color=mycolors[2]) + geom_point(data=WFn_sd) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[3], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[3]) + geom_point(data=WFsnwf_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[4], width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency), color=mycolors[4]) + geom_point(data=WFsnwf_sd)+ scale_x_continuous(breaks=seq(58000,580016,1))
setwd("~/mount_point3/epiSelect/outputs/")
library(ggpubr)
library(scales)
library(reshape2)
#Create the palette I want
mycolors<-get_palette("jco", 10)
#Function for data summary
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Open tables for simulation results
nonWFhalfFitness<-read.table("finalnonWF_halfFitness.out", header=TRUE,sep='\t')
WF_select_112st<-read.table("WF_select_112st2.log", header=TRUE,sep='\t')
WF_select_112st_nwf<-read.table("WF_select_112st_nwf.log", header=TRUE,sep='\t')
WF_neutralBottle<-read.table("WF_neutralBottle.log", header=TRUE,sep='\t')
#Calculate standard error for all of them
nonWF_sd<-data_summary(nonWFhalfFitness, varname="Frequency", groupnames=c("Generation"))
WFs_sd<-data_summary(WF_select_112st, varname="Frequency", groupnames=c("Generation"))
WFsnwf_sd<-data_summary(WF_select_112st_nwf, varname="Frequency", groupnames=c("Generation"))
WFn_sd<-data_summary(WF_neutralBottle, varname="Frequency", groupnames=c("Generation"))
p<-ggline(data=nonWFhalfFitness,x="Generation",y="Frequency", color=mycolors[1],add = c("mean_sd"), combine=TRUE,size = 0.5,error.plot = "errorbar",add.params = list(color=mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90))
p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd, color=mycolors[2]) + geom_point(data=WFn_sd) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[3], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[3]) + geom_point(data=WFsnwf_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[4], width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency), color=mycolors[4]) + geom_point(data=WFsnwf_sd)+ scale_x_continuous(breaks=seq(58000,580016,1))
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[5], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[5], linetype="dashed") + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[6], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[6], linetype="dashed") + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
setwd("~/mount_point3/epiSelect/outputs/")
library(ggpubr)
library(scales)
library(reshape2)
#Create the palette I want
mycolors<-get_palette("jco", 10)
#Function for data summary
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Open tables for simulation results
nonWFhalfFitness<-read.table("finalnonWF_halfFitness.out", header=TRUE,sep='\t')
WF_select_112st<-read.table("WF_select_112st2.log", header=TRUE,sep='\t')
WF_select_112st_nwf<-read.table("WF_select_112st_nwf.log", header=TRUE,sep='\t')
WF_neutralBottle<-read.table("WF_neutralBottle.log", header=TRUE,sep='\t')
#Calculate standard error for all of them
nonWF_sd<-data_summary(nonWFhalfFitness, varname="Frequency", groupnames=c("Generation"))
WFs_sd<-data_summary(WF_select_112st, varname="Frequency", groupnames=c("Generation"))
WFsnwf_sd<-data_summary(WF_select_112st_nwf, varname="Frequency", groupnames=c("Generation"))
WFn_sd<-data_summary(WF_neutralBottle, varname="Frequency", groupnames=c("Generation"))
p<-ggline(data=nonWFhalfFitness,x="Generation",y="Frequency", color=mycolors[1],add = c("mean_sd"), combine=TRUE,size = 0.5,error.plot = "errorbar",add.params = list(color=mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90))
p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd, color=mycolors[2]) + geom_point(data=WFn_sd) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[3], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[3]) + geom_point(data=WFsnwf_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[4], width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency), color=mycolors[4]) + geom_point(data=WFsnwf_sd)+ scale_x_continuous(breaks=seq(58000,580016,1))
p + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
ggplot() + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1)) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + geom_errorbar(data=nonWF_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=nonWF_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=nonWF_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
ggplot(aes(x=Generation,y=Frequency)) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=WFsnwf_sd) + scale_x_continuous(breaks=seq(58000,580016,1)) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + geom_errorbar(data=nonWF_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=nonWF_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=nonWF_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
ggplot() + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=WFsnwf_sd, aes(x=Generation,y=Frequency)) + scale_x_continuous(breaks=seq(58000,580016,1)) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + geom_errorbar(data=nonWF_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=nonWF_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=nonWF_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
ggplot() + geom_point(data=WFsnwf_sd, aes(x=Generation,y=Frequency)) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed")  + scale_x_continuous(breaks=seq(58000,580016,1)) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + geom_errorbar(data=nonWF_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=nonWF_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=nonWF_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
ggplot(data=WFsnwf_sd, aes(x=Generation,y=Frequency)) + geom_point() + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed")  + scale_x_continuous(breaks=seq(58000,580016,1)) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + geom_errorbar(data=nonWF_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=nonWF_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=nonWF_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
ggplot(data=WFsnwf_sd, aes(x=Generation,y=Frequency)) + geom_point() + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[1], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[1], linetype="dashed")  + scale_x_continuous(breaks=seq(58000,580016,1)) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + geom_errorbar(data=nonWF_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=nonWF_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=nonWF_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
ggplot(data=WFsnwf_sd, aes(x=Generation,y=Frequency)) + geom_point() + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[1], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[1], linetype="solid")  + scale_x_continuous(breaks=seq(58000,580016,1)) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + geom_errorbar(data=nonWF_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=nonWF_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=nonWF_sd) + scale_x_continuous(breaks=seq(58000,580016,1))
ggplot(data=WFsnwf_sd, aes(x=Generation,y=Frequency)) + geom_point(color=mycolors[1]) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[1], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[1], linetype="solid") + scale_x_continuous(breaks=seq(58000,580016,1)) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + geom_errorbar(data=nonWF_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=nonWF_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=nonWF_sd,color=mycolors[2]) + scale_x_continuous(breaks=seq(58000,580016,1))
WF_select_112st_nwf<-read.table("WF_select_112st_nwf.log", header=TRUE,sep='\t')
nonWFhalfFitness<-read.table("finalnonWF_halfFitness.out", header=TRUE,sep='\t')
View(WF_select_112st)
View(WF_select_112st_nwf)
View(nonWFhalfFitness)
setwd("~/mount_point3/epiSelect/outputs/")
library(ggpubr)
library(scales)
library(reshape2)
#Create the palette I want
mycolors<-get_palette("jco", 10)
#Function for data summary
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Open tables for simulation results
nonWFhalfFitness<-read.table("finalnonWF_halfFitness.out", header=TRUE,sep='\t')
WF_select_112st<-read.table("WF_select_112st2.log", header=TRUE,sep='\t')
WF_select_112st_nwf<-read.table("WF_select_112st_nwf.log", header=TRUE,sep='\t')
WF_neutralBottle<-read.table("WF_neutralBottle.log", header=TRUE,sep='\t')
#Calculate standard error for all of them
nonWF_sd<-data_summary(nonWFhalfFitness, varname="Frequency", groupnames=c("Generation"))
WFs_sd<-data_summary(WF_select_112st, varname="Frequency", groupnames=c("Generation"))
WFsnwf_sd<-data_summary(WF_select_112st_nwf, varname="Frequency", groupnames=c("Generation"))
WFn_sd<-data_summary(WF_neutralBottle, varname="Frequency", groupnames=c("Generation"))
p<-ggline(data=nonWFhalfFitness,x="Generation",y="Frequency", color=mycolors[1],add = c("mean_sd"), combine=TRUE,size = 0.5,error.plot = "errorbar",add.params = list(color=mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90))
p+geom_errorbar(data=WFn_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=WFn_sd, color=mycolors[2]) + geom_point(data=WFn_sd) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[3], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[3]) + geom_point(data=WFsnwf_sd) + geom_errorbar(data=WFs_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[4], width=.2, position=position_dodge(0.05)) + geom_line(data=WFs_sd,aes(x=Generation,y=Frequency), color=mycolors[4]) + geom_point(data=WFsnwf_sd)+ scale_x_continuous(breaks=seq(58000,580016,1))
ggplot(data=WFsnwf_sd, aes(x=Generation,y=Frequency)) + geom_point(color=mycolors[1]) + geom_errorbar(data=WFsnwf_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[1], width=.2, position=position_dodge(0.05)) + geom_line(data=WFsnwf_sd,aes(x=Generation,y=Frequency), color=mycolors[1], linetype="solid") + scale_x_continuous(breaks=seq(58000,580016,1)) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + geom_errorbar(data=nonWF_sd,aes(ymin=Frequency-sd,ymax=Frequency+sd), color=mycolors[2], width=.2, position=position_dodge(0.05)) + geom_line(data=nonWF_sd,aes(x=Generation,y=Frequency), color=mycolors[2], linetype="dashed") + geom_point(data=nonWF_sd,color=mycolors[2]) + scale_x_continuous(breaks=seq(58000,580016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-merge(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[1],mycolors[2])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_continuous(breaks=seq(58000,580016,1))
View(compare_sims)
View(nonWF_sd)
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[1],mycolors[2])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_continuous(breaks=seq(58000,580016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[1],mycolors[2])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means()
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(method = "wilcox.test", group.by="Generation")
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[1],mycolors[2])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(method = "wilcox.test", group.by="Generation")
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(method = "wilcox.test", group.by="Generation")
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(method = "wilcox.test", group.by="sim")
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(method = "wilcox.test", group.by="Generation")
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(method = "wilcox.test", aes(group = "Generation"))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(method = "wilcox.test", aes(group = Generation))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(aes(group = Generation))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(aes(group = Generation), , label = "p.format")
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(aes(group = "Generation"), , label = "p.format")
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(aes(group = Generation), , label = "p.format")
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(aes(group = Generation), label = "p.format")
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1)) + stat_compare_means(aes(group = Generation), label = "p.format")
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group = Generation), label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group = sim), label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
compare_sims$sim<-as.factor(compare_sims$sim)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group = sim), label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
compare_sims$sim<-as.factor(compare_sims$sim)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group = "sim"), label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
compare_sims$sim<-as.factor(compare_sims$sim)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group="sim"), label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,580016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
compare_sims$sim<-as.factor(compare_sims$sim)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group="sim"), label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
compare_sims$sim<-as.factor(compare_sims$sim)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=sim), label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
compare_sims$sim<-as.factor(compare_sims$sim)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(group.by="sim", label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWF_sd$sim<-"Non WF"
WFsnwf_sd$sim<-"WF"
compare_sims<-rbind(nonWF_sd,WFsnwf_sd)
compare_sims$sim<-as.factor(compare_sims$sim)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(group.by="Generation", label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
compare_means(Frequency ~ sim, data = compare_sims,
group.by = "Generation")
compare_means(Frequency ~ sim, data = compare_sims, group.by = "Generation")
View(compare_sims)
View(WF_select_112st_nwf)
View(nonWFhalfFitness)
nonWFhalfFitness[1:6,10]
nonWFhalfFitness[,c(1:6,10)]
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(group.by="Generation", label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(group.by="sim", label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=sim), label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
View(compare_sims)
compare_means(Frequency ~ sim, data = compare_sims, group.by = "Generation")
compare_means(Frequency ~ sim, data = compare_sims, group.by = "sim")
compare_means(Frequency ~ sim, data = compare_sims)
compare_means(Frequency ~ sim, data = compare_sims,group.by = Generation)
View(compare_sims)
compare_means(Frequency ~ sim, data = compare_sims,group.by = "Generation")
View(compare_sims)
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=sim), label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=sim), method="wilcox.test",label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
compare_means(Frequency ~ sim, data = compare_sims,group.by = "sim")
compare_means(Frequency ~ Generation, data = compare_sims,group.by = "sim")
View(genotypes_WF_112)
View(genotypes_third_fit)
View(compare_sims)
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=Generation), method="wilcox.test",label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=sim), method="wilcox.test",label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=sim),label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
compare_means(Generation ~ Frequency, compare_sims,group.by = sim)
compare_means(Generation ~ Frequency, compare_sims,group.by="sim")
compare_means(Frequency~Generation, compare_sims,group.by="sim")
compare_means(Frequency~Generation,data=compare_sims,group.by="sim")
compare_means(Frequency~sim,data=compare_sims,group.by="sim")
compare_means(Frequency~sim,data=compare_sims,group.by="Generation")
View(compare_sims)
View(nonWFhalfFitness)
View(WF_select_112st_nwf)
View(compare_sims)
compare_means(Frequency~sim,data=compare_sims,group.by="Generation",method="wilcox.test")
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=sim),label = "p.format") + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=sim),label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=Generation),label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group="sim"),label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group="Generation"),label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
nonWFhalfFitness$sim<-"Non WF"
WF_select_112st_nwf$sim<-"WF"
compare_sims<-rbind(nonWFhalfFitness[,c(1:6,10:11)],WF_select_112st_nwf)
compare_sims$sim<-as.factor(compare_sims$sim)
compare_sims$Generation<-as.factor(compare_sims$Generation)
ggboxplot(data=compare_sims,x="Generation",y="Frequency",color="sim",palette = c(mycolors[2],mycolors[1])) + stat_compare_means(aes(group=sim),label = "p.format") + theme_bw() + theme(axis.text.x = element_text(angle=90)) + scale_x_discrete(breaks=seq(58000,58016,1))
